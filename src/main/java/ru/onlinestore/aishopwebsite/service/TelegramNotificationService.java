package ru.onlinestore.aishopwebsite.service;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;
import ru.onlinestore.aishopwebsite.model.CartItem;
import ru.onlinestore.aishopwebsite.model.Order;

import java.net.URLEncoder;
import java.nio.charset.StandardCharsets;
import java.util.List;


@Service
public class TelegramNotificationService {

    @Value("${telegram.bot.token}")
    private String botToken;

    @Value("${telegram.chat.id}")
    private String chatId;

    private final RestTemplate restTemplate = new RestTemplate();

    public void sendOrderNotification(Order order, List<CartItem> cart, double total) {
        StringBuilder message = new StringBuilder();
        message.append("<b>üì¶ –ù–û–í–´–ô –ó–ê–ö–ê–ó</b>\n\n");
        message.append("<b>üë§ –ò–º—è:</b> ").append(order.getName()).append("\n");
        message.append("<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> <code>").append(order.getPhone()).append("</code>\n\n");
        message.append("<b>üõí –¢–æ–≤–∞—Ä—ã:</b>\n");
        for (CartItem item : cart) {
            message.append("‚Ä¢ ").append(item.getProduct().getName())
                    .append(" ‚Äî ").append(item.getQuantity()).append(" —à—Ç. ")
                    .append(String.format("%.2f", item.getTotalPrice())).append(" ‚ÇΩ\n");
        }
        message.append("\n");
        message.append("<b>üí∞ –ò—Ç–æ–≥–æ:</b> ").append(String.format("%.2f", total)).append(" ‚ÇΩ");

        sendMessage(message.toString());
    }

    private String escapeMarkdown(String text) {
        return text.replaceAll("[_\\-*]", "\\\\$0"); // —ç–∫—Ä–∞–Ω–∏—Ä—É–µ–º _, *, -
    }

    private String formatPrice(double price) {
        return String.format("%.2f", price).replace(",", ".");
    }

    private void sendMessage(String message) {
        try {
            String url = String.format(
                    "https://api.telegram.org/bot%s/sendMessage?chat_id=%s&text=%s&parse_mode=HTML",
                    botToken,
                    chatId,
                    message
            );

            restTemplate.getForObject(url, String.class);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}